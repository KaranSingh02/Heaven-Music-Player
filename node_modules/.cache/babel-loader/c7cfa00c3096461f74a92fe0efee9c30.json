{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karan\\\\my-app1\\\\src\\\\Components\\\\bottomplayer\\\\VolumeBar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar VolumeBar = function VolumeBar(_ref, _ref2) {\n  var width = _ref.width,\n      height = _ref.height,\n      barWidth = _ref.barWidth,\n      handlerWidth = _ref.handlerWidth,\n      handlerHeight = _ref.handlerHeight,\n      translate = _ref.translate,\n      onClick = _ref.onClick,\n      children = _ref.children;\n  var color = _ref2.color;\n  var diff = (width - barWidth) / 2;\n  return React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: width,\n    height: height,\n    viewBox: \"0 0 \".concat(width, \" \").concat(height),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: diff,\n    y: handlerHeight / 2,\n    width: barWidth,\n    height: height - handlerHeight,\n    fill: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"rect\", {\n    x: diff,\n    y: handlerHeight / 2,\n    width: barWidth,\n    height: translate,\n    fill: \"#E0E0E0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), children);\n};\n\nVolumeBar.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  barWidth: PropTypes.number.isRequired,\n  translate: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nVolumeBar.contextTypes = {\n  color: PropTypes.string\n};\nexport default VolumeBar;","map":{"version":3,"sources":["C:\\Users\\karan\\my-app1\\src\\Components\\bottomplayer\\VolumeBar.jsx"],"names":["React","PropTypes","VolumeBar","width","height","barWidth","handlerWidth","handlerHeight","translate","onClick","children","color","diff","propTypes","number","isRequired","func","contextTypes","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,cASD;AAAA,MARfC,KAQe,QARfA,KAQe;AAAA,MAPfC,MAOe,QAPfA,MAOe;AAAA,MANfC,QAMe,QANfA,QAMe;AAAA,MALfC,YAKe,QALfA,YAKe;AAAA,MAJfC,aAIe,QAJfA,aAIe;AAAA,MAHfC,SAGe,QAHfA,SAGe;AAAA,MAFfC,OAEe,QAFfA,OAEe;AAAA,MADfC,QACe,QADfA,QACe;AAAA,MAAZC,KAAY,SAAZA,KAAY;AACf,MAAMC,IAAI,GAAG,CAACT,KAAK,GAAGE,QAAT,IAAqB,CAAlC;AACA,SACE;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,KAAK,EAAEF,KAFT;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,OAAO,gBAASD,KAAT,cAAkBC,MAAlB,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAG,IAAA,OAAO,EAAEK,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,CAAC,EAAEG,IADL;AAEE,IAAA,CAAC,EAAEL,aAAa,GAAG,CAFrB;AAGE,IAAA,KAAK,EAAEF,QAHT;AAIE,IAAA,MAAM,EAAED,MAAM,GAAGG,aAJnB;AAKE,IAAA,IAAI,EAAEI,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,CAAC,EAAEC,IADL;AAEE,IAAA,CAAC,EAAEL,aAAa,GAAG,CAFrB;AAGE,IAAA,KAAK,EAAEF,QAHT;AAIE,IAAA,MAAM,EAAEG,SAJV;AAKE,IAAA,IAAI,EAAC,SALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CANF,EAsBIE,QAtBJ,CADF;AA0BD,CArCD;;AAsCAR,SAAS,CAACW,SAAV,GAAsB;AACpBV,EAAAA,KAAK,EAAEF,SAAS,CAACa,MAAV,CAAiBC,UADJ;AAEpBX,EAAAA,MAAM,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UAFL;AAGpBV,EAAAA,QAAQ,EAAEJ,SAAS,CAACa,MAAV,CAAiBC,UAHP;AAIpBP,EAAAA,SAAS,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UAJR;AAKpBN,EAAAA,OAAO,EAAER,SAAS,CAACe,IAAV,CAAeD;AALJ,CAAtB;AAOAb,SAAS,CAACe,YAAV,GAAyB;AACvBN,EAAAA,KAAK,EAAEV,SAAS,CAACiB;AADM,CAAzB;AAIA,eAAehB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst VolumeBar = ({\n  width,\n  height,\n  barWidth,\n  handlerWidth,\n  handlerHeight,\n  translate,\n  onClick,\n  children\n}, { color }) => {\n  const diff = (width - barWidth) / 2;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <g onClick={onClick}>\n        <rect\n          x={diff}\n          y={handlerHeight / 2}\n          width={barWidth}\n          height={height - handlerHeight}\n          fill={color}\n        />\n        <rect\n          x={diff}\n          y={handlerHeight / 2}\n          width={barWidth}\n          height={translate}\n          fill=\"#E0E0E0\"\n        />\n      </g>\n      { children }\n    </svg>\n  );\n};\nVolumeBar.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  barWidth: PropTypes.number.isRequired,\n  translate: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nVolumeBar.contextTypes = {\n  color: PropTypes.string\n};\n\nexport default VolumeBar;\n"]},"metadata":{},"sourceType":"module"}