{"ast":null,"code":"// handling multiple audio on the page helpers\nvar _playedAudios = [];\n\nfunction each(arr, cb) {\n  if (arr) {\n    for (var i = 0, len = arr.length; i < len; i++) {\n      if (arr[i] && cb(arr[i], i, arr)) {\n        break;\n      }\n    }\n  }\n}\n\nexport function stopAllOther(playing) {\n  each(_playedAudios, function (soundCloudAudio) {\n    if (soundCloudAudio.playing && soundCloudAudio.playing !== playing) {\n      soundCloudAudio.stop();\n    }\n  });\n}\nexport function addToPlayedStore(soundCloudAudio) {\n  var isPresent = false;\n  each(_playedAudios, function (_soundCloudAudio) {\n    if (_soundCloudAudio.playing === soundCloudAudio.playing) {\n      isPresent = true;\n      return true;\n    }\n  });\n\n  if (!isPresent) {\n    _playedAudios.push(soundCloudAudio);\n  }\n}\nexport function resetPlayedStore() {\n  each(_playedAudios, function (soundCloudAudio) {\n    soundCloudAudio.stop();\n  });\n  _playedAudios = [];\n}","map":{"version":3,"sources":["C:\\Users\\karan\\my-app1\\src\\Components\\audioStore.js"],"names":["_playedAudios","each","arr","cb","i","len","length","stopAllOther","playing","soundCloudAudio","stop","addToPlayedStore","isPresent","_soundCloudAudio","push","resetPlayedStore"],"mappings":"AAAA;AACA,IAAIA,aAAa,GAAG,EAApB;;AAEA,SAASC,IAAT,CAAeC,GAAf,EAAoBC,EAApB,EAAwB;AACtB,MAAID,GAAJ,EAAS;AACP,SAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,GAAG,CAACI,MAA1B,EAAkCF,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,UAAIF,GAAG,CAACE,CAAD,CAAH,IAAUD,EAAE,CAACD,GAAG,CAACE,CAAD,CAAJ,EAASA,CAAT,EAAYF,GAAZ,CAAhB,EAAkC;AAChC;AACD;AACF;AACF;AACF;;AAED,OAAO,SAASK,YAAT,CAAuBC,OAAvB,EAAgC;AACrCP,EAAAA,IAAI,CAACD,aAAD,EAAgB,UAAAS,eAAe,EAAI;AACrC,QAAIA,eAAe,CAACD,OAAhB,IAA2BC,eAAe,CAACD,OAAhB,KAA4BA,OAA3D,EAAoE;AAClEC,MAAAA,eAAe,CAACC,IAAhB;AACD;AACF,GAJG,CAAJ;AAKD;AAED,OAAO,SAASC,gBAAT,CAA2BF,eAA3B,EAA4C;AACjD,MAAIG,SAAS,GAAG,KAAhB;AAEAX,EAAAA,IAAI,CAACD,aAAD,EAAgB,UAAAa,gBAAgB,EAAI;AACtC,QAAIA,gBAAgB,CAACL,OAAjB,KAA6BC,eAAe,CAACD,OAAjD,EAA0D;AACxDI,MAAAA,SAAS,GAAG,IAAZ;AACA,aAAO,IAAP;AACD;AACF,GALG,CAAJ;;AAOA,MAAI,CAACA,SAAL,EAAgB;AACdZ,IAAAA,aAAa,CAACc,IAAd,CAAmBL,eAAnB;AACD;AACF;AAED,OAAO,SAASM,gBAAT,GAA6B;AAClCd,EAAAA,IAAI,CAACD,aAAD,EAAgB,UAAAS,eAAe,EAAI;AACrCA,IAAAA,eAAe,CAACC,IAAhB;AACD,GAFG,CAAJ;AAIAV,EAAAA,aAAa,GAAG,EAAhB;AACD","sourcesContent":["// handling multiple audio on the page helpers\nlet _playedAudios = [];\n\nfunction each (arr, cb) {\n  if (arr) {\n    for (let i = 0, len = arr.length; i < len; i++) {\n      if (arr[i] && cb(arr[i], i, arr)) {\n        break;\n      }\n    }\n  }\n}\n\nexport function stopAllOther (playing) {\n  each(_playedAudios, soundCloudAudio => {\n    if (soundCloudAudio.playing && soundCloudAudio.playing !== playing) {\n      soundCloudAudio.stop();\n    }\n  });\n}\n\nexport function addToPlayedStore (soundCloudAudio) {\n  let isPresent = false;\n\n  each(_playedAudios, _soundCloudAudio => {\n    if (_soundCloudAudio.playing === soundCloudAudio.playing) {\n      isPresent = true;\n      return true;\n    }\n  });\n\n  if (!isPresent) {\n    _playedAudios.push(soundCloudAudio);\n  }\n}\n\nexport function resetPlayedStore () {\n  each(_playedAudios, soundCloudAudio => {\n    soundCloudAudio.stop();\n  });\n\n  _playedAudios = [];\n}\n"]},"metadata":{},"sourceType":"module"}