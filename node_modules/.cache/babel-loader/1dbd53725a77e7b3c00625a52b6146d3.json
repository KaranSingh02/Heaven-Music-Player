{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karan\\\\my-app1\\\\src\\\\Components\\\\audioplayer.js\";\nimport React, { Component } from 'react';\nimport AudioPlayer from \"react-modular-audio-player\"; // Data\n\nvar Audio = React.createClass({\n  displayName: \"Audio\",\n  getInitialState: function getInitialState() {\n    return {\n      player: false\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    var $player = '.player';\n    /**\r\n      * Have to add media event listeners here.\r\n      *\r\n    */\n\n    $player.on('play', function (e) {\n      e.preventDefault();\n\n      _this.playLocation();\n    });\n    $player.on('pause', function (e) {\n      e.preventDefault();\n\n      _this.pause();\n    });\n    $player.on('ended', function (e) {\n      e.preventDefault();\n\n      _this.ended();\n    });\n    document.on('keydown', function (e) {\n      // Move currentTime forward and backward via arrow keys and play/pause via spacebar.\n      if (e.keyCode === 39) {\n        _this.state.player.currentTime += 1;\n      } else if (e.keyCode === 37) {\n        _this.state.player.currentTime -= 1;\n      } else if (e.keyCode === 32 && _this.state.player.paused === true) {\n        e.preventDefault();\n\n        _this.state.player.play();\n      } else if (e.keyCode === 32 && _this.state.player.paused === false) {\n        e.preventDefault();\n\n        _this.state.player.pause();\n      }\n    });\n    $player.on('wheel', function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (e.originalEvent.wheelDelta > 0) {\n        _this.state.player.currentTime += 1;\n      } else {\n        _this.state.player.currentTime -= 1;\n      }\n    });\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    var $player = '#' + this.props.id;\n    $player.off('play');\n    $player.off('pause');\n    document.off('keydown');\n    $player.off('wheel');\n  },\n  getPlaybackTime: function getPlaybackTime(time) {\n    var hours = Math.floor(time / 3600);\n    var minutes = Math.floor(time / 60);\n\n    if (minutes > 59) {\n      minutes = Math.floor(time / 60) - 60;\n    }\n\n    var seconds = Math.round(time - minutes * 60);\n\n    if (seconds > 3599) {\n      seconds = Math.round(time - minutes * 60) - 3600;\n    }\n\n    return time;\n  },\n  playLocation: function playLocation() {\n    this.setState({\n      player: '.player'[0]\n    }, function () {\n      var playbackTime = this.getPlaybackTime(this.state.player.currentTime);\n      var playbackTime = localStorage.getItem('codepenReactPlayer');\n\n      if (playbackTime !== null) {\n        this.state.player.currentTime = playbackTime;\n      }\n\n      this.state.player.play();\n    });\n  },\n  pause: function pause() {\n    var playbackTime = this.getPlaybackTime(this.state.player.currentTime);\n    localStorage.setItem('codepenReactPlayer', playbackTime);\n  },\n  ended: function ended() {\n    var playbackTime = 0; // Set playback_time to 0.\n\n    localStorage.setItem('codepenReactPlayer', playbackTime);\n  },\n  render: function render() {\n    return React.createElement(\"audio\", {\n      controls: true,\n      className: \"player\",\n      preload: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"http://www.nihilus.net/soundtracks/Static%20Memories.mp3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }));\n  }\n});\nexport default Audio;","map":{"version":3,"sources":["C:\\Users\\karan\\my-app1\\src\\Components\\audioplayer.js"],"names":["React","Component","AudioPlayer","Audio","createClass","getInitialState","player","componentDidMount","$player","on","e","preventDefault","playLocation","pause","ended","document","keyCode","state","currentTime","paused","play","stopPropagation","originalEvent","wheelDelta","componentWillUnmount","props","id","off","getPlaybackTime","time","hours","Math","floor","minutes","seconds","round","setState","playbackTime","localStorage","getItem","setItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AudioPlayer from \"react-modular-audio-player\";\r\n\r\n// Data\r\nvar Audio = React.createClass({\r\n  getInitialState: function() {\r\n    return {\r\n      player: false\r\n    }\r\n  },\r\n\r\n  componentDidMount: function() {\r\n    var $player = ('.player');\r\n\r\n    /**\r\n      * Have to add media event listeners here.\r\n      *\r\n    */\r\n    $player.on('play', (e) => {\r\n      e.preventDefault();\r\n      this.playLocation();\r\n    });\r\n\r\n    $player.on('pause', (e) => {\r\n      e.preventDefault();\r\n      this.pause();\r\n    });\r\n\r\n    $player.on('ended', (e) => {\r\n      e.preventDefault();\r\n      this.ended();\r\n    });\r\n\r\n    (document).on('keydown', (e) => {\r\n      // Move currentTime forward and backward via arrow keys and play/pause via spacebar.\r\n      if (e.keyCode === 39) {\r\n        this.state.player.currentTime += 1;\r\n      } else if (e.keyCode === 37) {\r\n        this.state.player.currentTime -= 1;\r\n      } else if (e.keyCode === 32 && this.state.player.paused === true) {\r\n        e.preventDefault();\r\n        this.state.player.play();\r\n      }  else if (e.keyCode === 32 && this.state.player.paused === false) {\r\n        e.preventDefault();\r\n        this.state.player.pause()\r\n      }\r\n    });\r\n\r\n    $player.on('wheel', (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (e.originalEvent.wheelDelta > 0) {\r\n        this.state.player.currentTime += 1;\r\n      } else {\r\n        this.state.player.currentTime -= 1;\r\n      }\r\n    });\r\n  },\r\n\r\n  componentWillUnmount: function() {\r\n    var $player = ('#' + this.props.id);\r\n    $player.off('play');\r\n    $player.off('pause');\r\n    (document).off('keydown')\r\n    $player.off('wheel')\r\n  },\r\n\r\n  getPlaybackTime: function(time) {\r\n    var hours = Math.floor(time / 3600);\r\n    var minutes = Math.floor(time / 60);\r\n    if (minutes > 59) {\r\n      minutes = Math.floor(time / 60) - 60;\r\n    }\r\n\r\n    var seconds = Math.round(time - minutes * 60);\r\n    if (seconds > 3599) {\r\n      seconds = Math.round(time - minutes * 60) - 3600;\r\n    }\r\n\r\n    return time;\r\n  },\r\n\r\n  playLocation: function() {\r\n    this.setState({player: ('.player')[0]}, function() {\r\n      var playbackTime = this.getPlaybackTime(this.state.player.currentTime);\r\n      var playbackTime = localStorage.getItem('codepenReactPlayer');\r\n\r\n      if (playbackTime !== null) {\r\n        this.state.player.currentTime = playbackTime;\r\n      }\r\n      this.state.player.play();\r\n    })\r\n  },\r\n\r\n  pause: function() {\r\n    var playbackTime = this.getPlaybackTime(this.state.player.currentTime);\r\n\r\n    localStorage.setItem('codepenReactPlayer', playbackTime);\r\n  },\r\n\r\n  ended: function() {\r\n    var playbackTime = 0;\r\n    // Set playback_time to 0.\r\n    localStorage.setItem('codepenReactPlayer', playbackTime);\r\n  },\r\n\r\n  render: function() {\r\n    return <audio controls className=\"player\" preload=\"false\">\r\n      <source src=\"http://www.nihilus.net/soundtracks/Static%20Memories.mp3\" />\r\n    </audio>\r\n  }\r\n});\r\n\r\n\r\nexport default Audio;\r\n"]},"metadata":{},"sourceType":"module"}