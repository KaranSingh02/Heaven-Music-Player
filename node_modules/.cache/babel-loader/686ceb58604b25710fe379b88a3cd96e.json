{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\karan\\\\my-app1\\\\src\\\\Components\\\\bottomplayer\\\\CommentsWrapper.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentsContainer from './CommentsContainer';\nimport FullComment from './FullComment';\nimport style from '../styles/audioElements.css';\n\nvar CommentsWrapper =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CommentsWrapper, _React$PureComponent);\n\n  function CommentsWrapper(props) {\n    var _this;\n\n    _classCallCheck(this, CommentsWrapper);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentsWrapper).call(this, props));\n    _this.state = {\n      fullComment: false,\n      fullCommentTextNode: null\n    };\n    _this.onClickComment = _this.onClickComment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.documentClickHandler = _this.documentClickHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentsWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.comment) {\n        var commentsContainer = document.querySelector(\".\".concat(style.commentsContainer));\n        commentsContainer.addEventListener('click', this.onClickComment);\n      }\n    }\n  }, {\n    key: \"onClickComment\",\n    value: function onClickComment(e) {\n      var target = e.target;\n\n      if (target.tagName.toLowerCase() === 'p') {\n        if (!this.state.fullComment) {\n          this.setState({\n            fullComment: true,\n            fullCommentTextNode: target.firstChild\n          });\n          return document.addEventListener('click', this.documentClickHandler);\n        }\n\n        if (target.firstChild === this.state.fullCommentTextNode) {\n          document.removeEventListener('click', this.documentClickHandler);\n          return this.setState({\n            fullComment: false\n          });\n        }\n\n        this.setState({\n          fullCommentTextNode: target.firstChild\n        });\n      }\n    }\n  }, {\n    key: \"documentClickHandler\",\n    value: function documentClickHandler(event) {\n      if (!document.querySelector(\".\".concat(style.commentsContainer)).contains(event.target)) {\n        this.setState({\n          fullComment: false\n        });\n        document.removeEventListener(event.type, this.documentClickHandler);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          songImageSrc = _this$props.songImageSrc,\n          width = _this$props.width,\n          height = _this$props.height,\n          progress = _this$props.progress,\n          comments = _this$props.comments,\n          comment = _this$props.comment;\n      var albumLength = Math.min(width * 0.4, height) - 40;\n      return React.createElement(\"div\", {\n        className: style.commentsWrapper,\n        style: {\n          height: \"\".concat(height, \"px\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: style.albumCoverContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: style.coverWrapper,\n        style: {\n          width: \"\".concat(albumLength, \"px\"),\n          height: \"\".concat(albumLength, \"px\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: songImageSrc,\n        alt: \"Album cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), comment ? React.createElement(FullComment, {\n        className: style.fullComment,\n        show: this.state.fullComment,\n        content: this.state.fullCommentTextNode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }) : null)), comment ? React.createElement(CommentsContainer, {\n        className: style.commentsContainer,\n        height: height,\n        progress: progress,\n        comments: comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        className: style.commentsWrapperBackgroundMask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: style.commentsWrapperBackground,\n        style: {\n          backgroundImage: \"url(\".concat(songImageSrc, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CommentsWrapper;\n}(React.PureComponent);\n\nCommentsWrapper.propTypes = {\n  songImageSrc: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  comment: PropTypes.bool\n};\nCommentsWrapper.defaultProps = {\n  songImageSrc: '',\n  height: 340\n};\nexport default CommentsWrapper;","map":{"version":3,"sources":["C:\\Users\\karan\\my-app1\\src\\Components\\bottomplayer\\CommentsWrapper.jsx"],"names":["React","PropTypes","CommentsContainer","FullComment","style","CommentsWrapper","props","state","fullComment","fullCommentTextNode","onClickComment","bind","documentClickHandler","comment","commentsContainer","document","querySelector","addEventListener","e","target","tagName","toLowerCase","setState","firstChild","removeEventListener","event","contains","type","songImageSrc","width","height","progress","comments","albumLength","Math","min","commentsWrapper","albumCoverContainer","coverWrapper","commentsWrapperBackgroundMask","commentsWrapperBackground","backgroundImage","PureComponent","propTypes","string","isRequired","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentsContainer from './CommentsContainer';\nimport FullComment from './FullComment';\nimport style from '../styles/audioElements.css';\n\nclass CommentsWrapper extends React.PureComponent {\n  static propTypes = {\n    songImageSrc: PropTypes.string.isRequired,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    comment: PropTypes.bool\n  };\n  static defaultProps = {\n    songImageSrc: '',\n    height: 340\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullComment: false,\n      fullCommentTextNode: null\n    };\n    this.onClickComment = this.onClickComment.bind(this);\n    this.documentClickHandler = this.documentClickHandler.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.comment) {\n      const commentsContainer = document.querySelector(`.${style.commentsContainer}`);\n      commentsContainer.addEventListener('click', this.onClickComment);\n    }\n  }\n  onClickComment(e) {\n    const target = e.target;\n    if (target.tagName.toLowerCase() === 'p') {\n      if (!this.state.fullComment) {\n        this.setState({\n          fullComment: true,\n          fullCommentTextNode: target.firstChild\n        });\n\n        return document.addEventListener('click', this.documentClickHandler);\n      }\n\n      if (target.firstChild === this.state.fullCommentTextNode) {\n        document.removeEventListener('click', this.documentClickHandler);\n        return this.setState({ fullComment: false });\n      }\n\n      this.setState({ fullCommentTextNode: target.firstChild });\n    }\n  }\n  documentClickHandler(event) {\n    if (!document.querySelector(`.${style.commentsContainer}`).contains(event.target)) {\n      this.setState({ fullComment: false });\n      document.removeEventListener(event.type, this.documentClickHandler);\n    }\n  }\n  render() {\n    const {\n      songImageSrc,\n      width,\n      height,\n      progress,\n      comments,\n      comment\n    } = this.props;\n    const albumLength = Math.min(width * 0.4, height) - 40;\n    return (\n      <div\n        className={style.commentsWrapper}\n        style={{\n          height: `${height}px`\n        }}\n      >\n        <section className={style.albumCoverContainer}>\n          <div\n            className={style.coverWrapper}\n            style={{\n              width: `${albumLength}px`,\n              height: `${albumLength}px`\n            }}\n          >\n            <img\n              src={songImageSrc}\n              alt=\"Album cover\"\n            />\n            {\n              comment ? <FullComment\n                className={style.fullComment}\n                show={this.state.fullComment}\n                content={this.state.fullCommentTextNode}\n              /> : null\n            }\n          </div>\n        </section>\n        {\n          comment ? <CommentsContainer\n            className={style.commentsContainer}\n            height={height}\n            progress={progress}\n            comments={comments}\n          /> : null\n        }\n\n        <div className={style.commentsWrapperBackgroundMask} />\n        <div\n          className={style.commentsWrapperBackground}\n          style={{\n            backgroundImage: `url(${songImageSrc})`\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CommentsWrapper;\n"]},"metadata":{},"sourceType":"module"}