{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\karan\\\\my-app1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\karan\\\\my-app1\\\\src\\\\Components\\\\audioplayer.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../style.css';\nimport noBodyCanSaveMeNow from \"../LP/1.mp3\";\nimport goodBye from \"../LP/2.mp3\";\nimport ttm from \"../LP/3.mp3\";\nimport bs from \"../LP/4.mp3\";\nimport invisible from \"../LP/5.mp3\";\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nvar Musicplayer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Musicplayer, _Component);\n\n  function Musicplayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Musicplayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Musicplayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedTrack: null,\n      player: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n    return _this;\n  }\n\n  _createClass(Musicplayer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.player.addEventListener(\"timeupdate\", function (e) {\n        _this2.setState({\n          currentTime: e.target.currentTime,\n          duration: e.target.duration\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.player.removeEventListener(\"timeupdate\", function () {});\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.selectedTrack !== prevState.selectedTrack) {\n        var track;\n\n        switch (this.state.selectedTrack) {\n          case \"Nobody can save me now\":\n            track = noBodyCanSaveMeNow;\n            break;\n\n          case \"Good Goodbye\":\n            track = goodBye;\n            break;\n\n          case \"Talking To Myself\":\n            track = ttm;\n            break;\n\n          case \"Battle Symphony\":\n            track = bs;\n            break;\n\n          case \"Invisible\":\n            track = invisible;\n            break;\n\n          default:\n            break;\n        }\n\n        if (track) {\n          this.player.src = track;\n          console.log(this.player.src);\n          this.player.play();\n          this.setState({\n            player: \"playing\",\n            duration: this.player.duration\n          });\n        }\n      }\n\n      if (this.state.player !== prevState.player) {\n        if (this.state.player === \"paused\") {\n          this.player.pause();\n        } else if (this.state.player === \"stopped\") {\n          this.player.pause();\n          this.player.currentTime = 0;\n          this.setState({\n            selectedTrack: null\n          });\n        } else if (this.state.player === \"playing\" && prevState.player === \"paused\") {\n          this.player.play();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var list = [{\n        id: 1,\n        title: \"Nobody can save me now\"\n      }, {\n        id: 2,\n        title: \"Good Goodbye\"\n      }, {\n        id: 3,\n        title: \"Talking To Myself\"\n      }, {\n        id: 4,\n        title: \"Battle Symphony\"\n      }, {\n        id: 5,\n        title: \"Invisible\"\n      }].map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          onClick: function onClick() {\n            return _this3.setState({\n              selectedTrack: item.title\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, item.title);\n      });\n      var currentTime = getTime(this.state.currentTime);\n      var duration = getTime(this.state.duration);\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Heaven Player\"), React.createElement(\"div\", {\n        className: \"cover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"songs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, list), React.createElement(\"div\", {\n        className: \"btnplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.player === \"paused\" && React.createElement(Button, {\n        onClick: function onClick() {\n          return _this3.setState({\n            player: \"playing\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Play\"), this.state.player === \"playing\" && React.createElement(Button, {\n        variant: \"light\",\n        onClick: function onClick() {\n          return _this3.setState({\n            player: \"paused\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Pause\"), this.state.player === \"playing\" || this.state.player === \"paused\" ? React.createElement(Button, {\n        variant: \"light\",\n        onClick: function onClick() {\n          return _this3.setState({\n            player: \"stopped\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Stop\") : \"\"), this.state.player === \"playing\" || this.state.player === \"paused\" ? React.createElement(\"div\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, currentTime, \" / \", duration) : \"\", React.createElement(\"audio\", {\n        ref: function ref(_ref) {\n          return _this3.player = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Musicplayer;\n}(Component);\n\n{\n  /*\r\n  class Musicplayer extends Component{\r\n   handleclick(e){\r\n     console.log(e.target);\r\n   }\r\n   render() {\r\n     return (\r\n       <div className=\"player\">\r\n       <button onClick = {this.handleclick}>Click me\r\n       </button>\r\n  \n       </div>\r\n     )\r\n   }\r\n  }\r\n  */\n}\nexport default Musicplayer;","map":{"version":3,"sources":["C:\\Users\\karan\\my-app1\\src\\Components\\audioplayer.js"],"names":["React","Component","Button","noBodyCanSaveMeNow","goodBye","ttm","bs","invisible","getTime","time","isNaN","Math","floor","slice","Musicplayer","state","selectedTrack","player","currentTime","duration","addEventListener","e","setState","target","removeEventListener","prevProps","prevState","track","src","console","log","play","pause","list","id","title","map","item","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../style.css';\r\nimport noBodyCanSaveMeNow from \"../LP/1.mp3\";\r\nimport goodBye from \"../LP/2.mp3\";\r\nimport ttm from \"../LP/3.mp3\";\r\nimport bs from \"../LP/4.mp3\";\r\nimport invisible from \"../LP/5.mp3\";\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n\r\nclass Musicplayer extends Component {\r\n  state = {\r\n    selectedTrack: null,\r\n    player: \"stopped\",\r\n    currentTime: null,\r\n    duration: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.player.addEventListener(\"timeupdate\", e => {\r\n      this.setState({\r\n        currentTime: e.target.currentTime,\r\n        duration: e.target.duration\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.player.removeEventListener(\"timeupdate\", () => {});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.selectedTrack !== prevState.selectedTrack) {\r\n      let track;\r\n      switch (this.state.selectedTrack) {\r\n        case \"Nobody can save me now\":\r\n          track = noBodyCanSaveMeNow;\r\n          break;\r\n        case \"Good Goodbye\":\r\n          track = goodBye;\r\n          break;\r\n        case \"Talking To Myself\":\r\n          track = ttm;\r\n          break;\r\n        case \"Battle Symphony\":\r\n          track = bs;\r\n          break;\r\n          case \"Invisible\":\r\n            track = invisible;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (track) {\r\n        this.player.src = track;\r\n        console.log(this.player.src)\r\n        this.player.play();\r\n        this.setState({ player: \"playing\", duration: this.player.duration });\r\n      }\r\n    }\r\n    if (this.state.player !== prevState.player) {\r\n      if (this.state.player === \"paused\") {\r\n        this.player.pause();\r\n      } else if (this.state.player === \"stopped\") {\r\n        this.player.pause();\r\n        this.player.currentTime = 0;\r\n        this.setState({ selectedTrack: null });\r\n      } else if (\r\n        this.state.player === \"playing\" &&\r\n        prevState.player === \"paused\"\r\n      ) {\r\n        this.player.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const list = [\r\n      { id: 1, title: \"Nobody can save me now\" },\r\n      { id: 2, title: \"Good Goodbye\" },\r\n      { id: 3, title: \"Talking To Myself\" },\r\n      { id: 4, title: \"Battle Symphony\" },\r\n      { id: 5, title: \"Invisible\" }\r\n    ].map(item => {\r\n      return (\r\n        <li\r\n          key={item.id}\r\n          onClick={() => this.setState({ selectedTrack: item.title })}\r\n        >\r\n          {item.title}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    const currentTime = getTime(this.state.currentTime);\r\n    const duration = getTime(this.state.duration);\r\n\r\n    return (\r\n      <>\r\n      <div className=\"player\">\r\n        <h1 className = \"title\">Heaven Player</h1>\r\n        <div className=\"cover\" />\r\n        <ul className=\"songs\">{list}</ul>\r\n        <div className=\"btnplay\">\r\n          {this.state.player === \"paused\" && (\r\n            <Button onClick={() => this.setState({ player: \"playing\" })}>\r\n              Play\r\n            </Button>\r\n          )}\r\n          {this.state.player === \"playing\" && (\r\n            <Button variant=\"light\" onClick={() => this.setState({ player: \"paused\" })}>\r\n              Pause\r\n            </Button>\r\n          )}\r\n          {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n            <Button variant=\"light\" onClick={() => this.setState({ player: \"stopped\" })}>\r\n              Stop\r\n            </Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n          <div className=\"time\">\r\n            {currentTime} / {duration}\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <audio ref={ref => (this.player = ref)} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n{/*\r\nclass Musicplayer extends Component{\r\n  handleclick(e){\r\n    console.log(e.target);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"player\">\r\n      <button onClick = {this.handleclick}>Click me\r\n      </button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n*/}\r\nexport default Musicplayer;\r\n"]},"metadata":{},"sourceType":"module"}